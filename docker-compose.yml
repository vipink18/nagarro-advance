version: "3.8"
services:
  # postgres:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: inventorydb
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventorydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - redis_data:/data

  # backend:
  #   build: ./backend
  #   environment:
  #     SPRING_PROFILES_ACTIVE: docker   # ðŸ‘ˆ use docker profile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: always

  backend:
    build: ./backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
